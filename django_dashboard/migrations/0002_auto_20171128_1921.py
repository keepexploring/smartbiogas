# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-28 19:21
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('django_dashboard', '0001_initial_manual'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='biogasplants',
            options={'permissions': (('remove_biogas', 'Remove a biogas plant from the platform'), ('create_biogas', 'Add a biogas plant to the platform'), ('edit_biogas', 'Edit a biogas plant profile'), ('edit_location_biogas', 'Able to edit a location associated with a biogas plant')), 'verbose_name': 'Biogas Plant', 'verbose_name_plural': 'Biogas Plants'},
        ),
        migrations.AlterModelOptions(
            name='jobhistory',
            options={'get_latest_by': ['-priority', '-date_flagged'], 'permissions': (('remove_job', 'Remove a job from the platform'), ('create_job', 'Add a job to the platform'), ('edit_job', 'Edit a job profile'), ('edit_job_status', 'Able to edit a job status')), 'verbose_name': 'Job History', 'verbose_name_plural': 'Job History'},
        ),
        migrations.AlterModelOptions(
            name='technicians',
            options={'permissions': (('remove_technician', 'Remove a technician from the platform'), ('create_technician', 'Add a technician to the platform'), ('edit_technician', "Edit a technican's profile")), 'verbose_name': 'Technician', 'verbose_name_plural': 'Technicians'},
        ),
        migrations.AlterModelOptions(
            name='technition_realtime',
            options={'permissions': (('remove_technician', 'Remove a technician from the platform'), ('create_technician', 'Add a technician to the platform'), ('edit_technician', "Edit a technican's profile")), 'verbose_name': 'Status and Location', 'verbose_name_plural': 'Status and Location'},
        ),
        migrations.AlterModelOptions(
            name='users',
            options={'permissions': (('remove_user', 'Remove a user from the platform'), ('create_user', 'Add a user to the platform'), ('edit_user', "Edit a user's profile"), ('edit_mobile_number', 'Able to Edit a users mobile number')), 'verbose_name': 'Owner', 'verbose_name_plural': 'Owners'},
        ),
        migrations.RemoveField(
            model_name='technition_realtime',
            name='seconds_active',
        ),
        migrations.AddField(
            model_name='technicians',
            name='average_rating',
            field=models.FloatField(blank=True, default=0, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='biogasplants',
            name='description_location',
            field=models.CharField(blank=True, max_length=400, null=True),
        ),
        migrations.AlterField(
            model_name='biogasplants',
            name='postcode',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='biogasplants',
            name='size_biogas',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='biogasplants',
            name='type_biogas',
            field=models.CharField(blank=True, choices=[('TUBULAR', 'tubular'), ('FIXED_DOME', 'fixed_dome')], max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='technicians',
            name='acredit_to_install',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, choices=[('TUBULAR', 'tubular'), ('FIXED_DOME', 'fixed_dome')], db_index=True, default=list, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='technicians',
            name='datetime_modified',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='technition_realtime',
            name='status',
            field=models.NullBooleanField(choices=[(True, 'Active'), (False, 'Inactive')], db_index=True),
        ),
    ]
