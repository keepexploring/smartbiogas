# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-05-16 10:04
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_dashboard.enums.Dashboard
import enumfields.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('django_dashboard', '0060_biogasplant_location_estimated'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoFault',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('auto_fault_detection', models.IntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('auto_fault_detection_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BiogasSensorStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sensor_status', models.IntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('sensor_status_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('template_id', models.CharField(blank=True, db_index=True, max_length=200)),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CardOrder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('card_order', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='CardTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('template_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('card_type', enumfields.fields.EnumField(enum=django_dashboard.enums.Dashboard.CardTypes, max_length=1, null=True)),
                ('entity_type', enumfields.fields.EnumField(enum=django_dashboard.enums.Dashboard.EntityTypes, max_length=1, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='WidgetCards')),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.Company')),
            ],
        ),
        migrations.CreateModel(
            name='DataConnection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('data_connection_with_plant', models.IntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('data_connection_with_plant_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndictorJoinTable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('auto_fault', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.AutoFault')),
                ('data_connection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.DataConnection')),
            ],
        ),
        migrations.CreateModel(
            name='LowGasPressure',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('low_gas_pressure_status', models.IntegerField(blank=True, db_index=True, editable=False, help_text='If 0 gas pressure is low 10 means all is ok, in between is defined by internal logic', null=True)),
                ('low_gas_pressure_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PendingAction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_complete', models.BooleanField(db_index=True, default=False)),
                ('entity_type', enumfields.fields.EnumField(enum=django_dashboard.enums.Dashboard.EntityTypes, max_length=1, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('alert_type', enumfields.fields.EnumField(enum=django_dashboard.enums.Dashboard.AlertTypes, max_length=1, null=True)),
                ('created', models.DateTimeField(blank=True, db_index=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pending_actions', to='django_dashboard.Card')),
            ],
        ),
        migrations.CreateModel(
            name='Thresholds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TrendChangeDetectionPDecrease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('trend_change_detection_pdecrease', models.IntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('trend_change_detection_pdecrease_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrendChangeDetectionPIncrease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('trend_change_detection_pincrease', models.IntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('trend_change_detection_pincrease_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UtilisationStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('utilisation_status', models.IntegerField(blank=True, db_index=True, editable=False, null=True)),
                ('utilisation_status_info', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='userdetail',
            name='logged_in_as',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logged_in_as', to='django_dashboard.Company'),
        ),
        migrations.AddField(
            model_name='indictorjointable',
            name='low_gas_pressure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.LowGasPressure'),
        ),
        migrations.AddField(
            model_name='indictorjointable',
            name='plant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.BiogasPlant'),
        ),
        migrations.AddField(
            model_name='indictorjointable',
            name='sensor_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.BiogasSensorStatus'),
        ),
        migrations.AddField(
            model_name='indictorjointable',
            name='trendChangeDetectionPDecrease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.TrendChangeDetectionPDecrease'),
        ),
        migrations.AddField(
            model_name='indictorjointable',
            name='trendchangedetectionPIncrease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.TrendChangeDetectionPIncrease'),
        ),
        migrations.AddField(
            model_name='indictorjointable',
            name='utilisation_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.UtilisationStatus'),
        ),
        migrations.AddField(
            model_name='cardorder',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='django_dashboard.UserDetail'),
        ),
        migrations.AddField(
            model_name='card',
            name='card_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='django_dashboard.CardTemplate'),
        ),
    ]
